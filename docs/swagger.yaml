definitions:
  app.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      state:
        type: integer
      username:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/user/auth:
    post:
      description: user authorization
      parameters:
      - description: userName
        in: query
        name: username
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Get Auth
  /api/user/create:
    post:
      description: Create user
      parameters:
      - description: userName
        in: query
        name: username
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Create user
  /api/v1/users:
    get:
      description: Get users with params
      parameters:
      - description: user_name[=]=name
        in: query
        items:
          type: string
        name: user_name
        type: array
      - description: state[> | < | >= | <= | =]=1
        in: query
        items:
          type: integer
        name: state
        type: array
      - description: email[=]=email@mail.com
        in: query
        items:
          type: string
        name: email
        type: array
      - description: created_at[> | < | >= | <= | =]=2020-09-01
        in: query
        items:
          type: string
        name: created_at
        type: array
      - description: order[fieldName]=ASC|DESC
        in: query
        name: order
        type: string
      - description: "1"
        in: query
        name: limit
        type: integer
      - description: "2"
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - JWT: []
      summary: List users
  /api/v1/users/{id}/:
    get:
      description: Get user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-AUTH-TOKEN:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - JWT: []
      summary: Show a user
  /api/v1/users/{id}/update:
    patch:
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: user_name=name
        in: query
        name: user_name
        type: string
      - description: state=1
        in: query
        name: state
        type: integer
      - description: mailname@mail.com
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-AUTH-TOKEN:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - JWT: []
      summary: Update user
securityDefinitions:
  JWT:
    in: header
    name: X-AUTH-TOKEN
    type: apiKey
swagger: "2.0"
